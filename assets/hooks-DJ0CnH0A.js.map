{"version":3,"file":"hooks-DJ0CnH0A.js","sources":["../../src/features/activityDetails/Store.ts","../../src/db/queries/editInterval.ts","../../src/features/intervals/hooks.ts"],"sourcesContent":["import { create } from \"zustand\";\nimport { Dayjs } from \"dayjs\";\n\ntype ActivityState = {\n  editInterval?: {\n    start: Dayjs;\n    startError: string;\n    end?: Dayjs;\n    endError: string;\n  };\n  deleteIntervalConfirmationData?: {\n    intervalId: number;\n  };\n  isDeleteIntervalConfirmationOpen: () => boolean;\n  closeDeleteIntervalConfirmation: () => void;\n  openDeleteIntervalConfirmation: (intervalId: number) => void;\n};\n\nexport const useActivityStore = create<ActivityState>((set, get) => ({\n  isDeleteIntervalConfirmationOpen: () =>\n    !!get().deleteIntervalConfirmationData,\n  closeDeleteIntervalConfirmation: () =>\n    set({ deleteIntervalConfirmationData: undefined }),\n  openDeleteIntervalConfirmation: (intervalId) =>\n    set({ deleteIntervalConfirmationData: { intervalId } }),\n}));\n","import { db } from \"../db\";\nimport { getFullName } from \"./activities\";\nimport { Interval } from \"../entities\";\n\nexport type EditIntervalData = {\n  interval: Interval;\n  // concatenation of self and ancestors activity names joined with \" / \"\n  activityFullName: string;\n};\n\nexport async function getEditIntervalData(\n  intervalId: number,\n): Promise<EditIntervalData> {\n  return db.transaction(\"r\", db.activities, db.intervals, async () => {\n    const interval = await db.intervals.get(intervalId);\n    if (!interval) {\n      throw new Error(`Interval with ID ${intervalId} does not exist.`);\n    }\n\n    const activity = await db.activities.get(interval.activityId);\n    if (!activity) {\n      throw new Error(\n        `Activity with ID ${interval.activityId} does not exist.`,\n      );\n    }\n\n    const activityFullName = await getFullName(activity);\n\n    return { activityFullName, interval };\n  });\n}\n\nexport async function updateInterval(\n  intervalId: number,\n  newStart: number,\n  newEnd: number,\n): Promise<void> {\n  return db.transaction(\"rw\", db.intervals, async () => {\n    // Validate the new start and end times\n    if (newStart >= newEnd) {\n      throw new Error(\"Start time must be less than end time.\");\n    }\n\n    const updated = await db.intervals.update(intervalId, {\n      start: newStart,\n      end: newEnd,\n    });\n    if (!updated) {\n      throw new Error(`Interval with ID ${intervalId} does not exist.`);\n    }\n  });\n}\n\nexport async function deleteInterval(intervalId: number): Promise<void> {\n  return db.transaction(\"rw\", db.intervals, async () => {\n    const interval = await db.intervals.get(intervalId);\n    if (!interval) {\n      throw new Error(`Interval with ID ${intervalId} does not exist.`);\n    }\n\n    // Delete the interval\n    await db.intervals.delete(intervalId);\n  });\n}\n","import { useMemo } from \"react\";\nimport { MAX_DATE_MS } from \"../../utils/date\";\nimport { humanize } from \"../../utils/duration\";\n\nimport { useClockStore } from \"../../utils/clock\";\n\nexport const useIntervalDuration = (\n  start: number,\n  end: number,\n  full: boolean,\n) => {\n  const time = useClockStore((state) => state.time);\n  return useMemo(() => {\n    const inProgress = end === MAX_DATE_MS;\n    const effectiveEnd = inProgress ? +time : end;\n    const duration = effectiveEnd - start;\n    return humanize(duration, inProgress || full);\n  }, [full, start, end, time]);\n};\n"],"names":["useActivityStore","create","set","get","intervalId","getEditIntervalData","db","interval","activity","getFullName","updateInterval","newStart","newEnd","deleteInterval","useIntervalDuration","start","end","full","time","useClockStore","state","useMemo","inProgress","MAX_DATE_MS","duration","humanize"],"mappings":"kFAkBO,MAAMA,EAAmBC,EAAsB,CAACC,EAAKC,KAAS,CACnE,iCAAkC,IAChC,CAAC,CAACA,IAAM,+BACV,gCAAiC,IAC/BD,EAAI,CAAE,+BAAgC,OAAW,EACnD,+BAAiCE,GAC/BF,EAAI,CAAE,+BAAgC,CAAE,WAAAE,EAAW,CAAG,CAC1D,EAAE,ECfF,eAAsBC,EACpBD,EAC2B,CAC3B,OAAOE,EAAG,YAAY,IAAKA,EAAG,WAAYA,EAAG,UAAW,SAAY,CAClE,MAAMC,EAAW,MAAMD,EAAG,UAAU,IAAIF,CAAU,EAClD,GAAI,CAACG,EACH,MAAM,IAAI,MAAM,oBAAoBH,CAAU,kBAAkB,EAGlE,MAAMI,EAAW,MAAMF,EAAG,WAAW,IAAIC,EAAS,UAAU,EAC5D,GAAI,CAACC,EACH,MAAM,IAAI,MACR,oBAAoBD,EAAS,UAAU,kBAAA,EAM3C,MAAO,CAAE,iBAFgB,MAAME,EAAYD,CAAQ,EAExB,SAAAD,CAAA,CAC7B,CAAC,CACH,CAEA,eAAsBG,EACpBN,EACAO,EACAC,EACe,CACf,OAAON,EAAG,YAAY,KAAMA,EAAG,UAAW,SAAY,CAEpD,GAAIK,GAAYC,EACd,MAAM,IAAI,MAAM,wCAAwC,EAO1D,GAAI,CAJY,MAAMN,EAAG,UAAU,OAAOF,EAAY,CACpD,MAAOO,EACP,IAAKC,CAAA,CACN,EAEC,MAAM,IAAI,MAAM,oBAAoBR,CAAU,kBAAkB,CAEpE,CAAC,CACH,CAEA,eAAsBS,EAAeT,EAAmC,CACtE,OAAOE,EAAG,YAAY,KAAMA,EAAG,UAAW,SAAY,CAEpD,GAAI,CADa,MAAMA,EAAG,UAAU,IAAIF,CAAU,EAEhD,MAAM,IAAI,MAAM,oBAAoBA,CAAU,kBAAkB,EAIlE,MAAME,EAAG,UAAU,OAAOF,CAAU,CACtC,CAAC,CACH,CCzDO,MAAMU,EAAsB,CACjCC,EACAC,EACAC,IACG,CACH,MAAMC,EAAOC,EAAeC,GAAUA,EAAM,IAAI,EAChD,OAAOC,EAAAA,QAAQ,IAAM,CACnB,MAAMC,EAAaN,IAAQO,EAErBC,GADeF,EAAa,CAACJ,EAAOF,GACVD,EAChC,OAAOU,EAASD,EAAUF,GAAcL,CAAI,CAC9C,EAAG,CAACA,EAAMF,EAAOC,EAAKE,CAAI,CAAC,CAC7B"}