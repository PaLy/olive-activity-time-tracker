{"version":3,"file":"EditInterval-dcZjbApG.js","sources":["../../node_modules/@mui/icons-material/esm/Delete.js","../../src/features/activityDetails/EditInterval.tsx"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zM19 4h-3.5l-1-1h-5l-1 1H5v2h14z\"\n}), 'Delete');","import Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Container from \"@mui/material/Container\";\nimport Grid from \"@mui/material/Grid\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Modal from \"@mui/material/Modal\";\nimport Paper from \"@mui/material/Paper\";\nimport Slide from \"@mui/material/Slide\";\nimport Typography from \"@mui/material/Typography\";\nimport { useParams } from \"react-router\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport { DateTimeRangePicker } from \"../../components/DateTimeRangePicker\";\nimport { useNavigate } from \"../../router/hooks\";\nimport { useAppSnackbarStore } from \"../../components/AppSnackbarStore\";\nimport { useActivityStore } from \"./Store\";\nimport { useState } from \"react\";\nimport dayjs from \"../../utils/dayjs\";\nimport { useLiveQuery } from \"dexie-react-hooks\";\nimport {\n  EditIntervalData,\n  getEditIntervalData,\n  updateInterval,\n} from \"../../db/queries/editInterval\";\nimport { MAX_DATE_MS } from \"../../utils/date\";\nimport { useIntervalDuration } from \"../intervals/hooks\";\n\ntype Params = {\n  intervalID: string;\n};\n\nexport const EditInterval = () => {\n  const params = useParams() as Params;\n  // TODO validate intervalID is a number\n  const intervalId = parseInt(params.intervalID ?? \"\");\n\n  const editIntervalData = useLiveQuery(\n    () =>\n      getEditIntervalData(intervalId).catch((e) => {\n        console.error(e);\n        useAppSnackbarStore.getState().openError(\"Interval not found\");\n        return undefined;\n      }),\n    [intervalId],\n  );\n\n  if (!editIntervalData) {\n    return null;\n  }\n\n  return <Content editIntervalData={editIntervalData} />;\n};\n\ntype ContentProps = {\n  editIntervalData: EditIntervalData;\n};\n\nconst Content = (props: ContentProps) => {\n  const { editIntervalData } = props;\n  const { interval, activityFullName } = editIntervalData;\n  const [state, setState] = useState({\n    start: interval.start,\n    startError: \"\",\n    end: interval.end,\n    endError: \"\",\n  });\n\n  const openDeleteIntervalConfirmation = useActivityStore(\n    (state) => state.openDeleteIntervalConfirmation,\n  );\n\n  const editedInterval = {\n    start: state.start,\n    end: state.end,\n  };\n  const duration = useIntervalDuration(\n    editedInterval.start,\n    editedInterval.end,\n    true,\n  );\n  const navigate = useNavigate();\n\n  const omitEndTimePicker = state.end === MAX_DATE_MS;\n\n  const { save, saving } = useSave(editIntervalData, editedInterval);\n\n  return (\n    <>\n      <Modal open={true} onClose={() => navigate(-1)}>\n        <Slide direction=\"up\" in={true} mountOnEnter unmountOnExit>\n          <Box\n            sx={{\n              position: \"absolute\",\n              bottom: 0,\n              left: 0,\n              right: 0,\n            }}\n          >\n            <Container maxWidth={\"sm\"} disableGutters>\n              <Paper square sx={{ p: 2, borderRadius: \"32px 32px 0 0\" }}>\n                <Typography variant=\"h6\" sx={{ m: 1 }}>\n                  {activityFullName}\n                </Typography>\n                <DateTimeRangePicker\n                  // TODO limit by own and descendant intervals\n                  startTime={dayjs(state.start)}\n                  setStartTime={(start) =>\n                    setState({ ...state, start: +start })\n                  }\n                  startTimeError={state.startError}\n                  setStartTimeError={(startError) =>\n                    setState({ ...state, startError })\n                  }\n                  endTime={dayjs(state.end)}\n                  setEndTime={(end) => setState({ ...state, end: +end })}\n                  endTimeError={state.endError}\n                  setEndTimeError={(endError) =>\n                    setState({ ...state, endError })\n                  }\n                  omitEndTimePicker={omitEndTimePicker}\n                />\n                <Typography sx={{ m: 1 }}>{duration}</Typography>\n                <Grid container justifyContent={\"space-between\"}>\n                  <IconButton\n                    aria-label=\"delete\"\n                    onClick={() => openDeleteIntervalConfirmation(interval.id)}\n                  >\n                    <DeleteIcon />\n                  </IconButton>\n                  <Button\n                    variant=\"text\"\n                    startIcon={<SaveIcon />}\n                    onClick={save}\n                    disabled={saving || !!state.startError || !!state.endError}\n                  >\n                    Save\n                  </Button>\n                </Grid>\n              </Paper>\n            </Container>\n          </Box>\n        </Slide>\n      </Modal>\n    </>\n  );\n};\n\nconst useSave = (\n  editIntervalData: EditIntervalData,\n  editedInterval: { start: number; end: number },\n) => {\n  const { interval } = editIntervalData;\n  const { start, end } = editedInterval;\n  const openSuccessSnackbar = useAppSnackbarStore((state) => state.openSuccess);\n  const openErrorSnackbar = useAppSnackbarStore((state) => state.openError);\n  const navigate = useNavigate();\n  const [saving, setSaving] = useState(false);\n\n  return {\n    save: async () => {\n      // TODO update ancestors\n      setSaving(true);\n      return updateInterval(interval.id, start, end)\n        .then(() => {\n          openSuccessSnackbar(\"Interval successfully changed\");\n          navigate(-1);\n        })\n        .finally(() => setSaving(false))\n        .catch((e) => {\n          console.error(e);\n          openErrorSnackbar(\"Failed to update interval\");\n        });\n    },\n    saving,\n  };\n};\n"],"names":["DeleteIcon","createSvgIcon","_jsx","EditInterval","params","useParams","intervalId","editIntervalData","useLiveQuery","getEditIntervalData","e","useAppSnackbarStore","jsx","Content","props","interval","activityFullName","state","setState","useState","openDeleteIntervalConfirmation","useActivityStore","editedInterval","duration","useIntervalDuration","navigate","useNavigate","omitEndTimePicker","MAX_DATE_MS","save","saving","useSave","Modal","Slide","Box","Container","jsxs","Paper","Typography","DateTimeRangePicker","dayjs","start","startError","end","endError","Grid","IconButton","Button","SaveIcon","openSuccessSnackbar","openErrorSnackbar","setSaving","updateInterval"],"mappings":"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","x_google_ignoreList":[0]}