{"version":3,"file":"ActivityDetailsPage-CgPAelxQ.js","sources":["../../src/db/queries/activityDetails.ts","../../src/features/activityDetails/DeleteIntervalConfirmation.tsx","../../node_modules/@mui/icons-material/esm/Edit.js","../../node_modules/@mui/icons-material/esm/Check.js","../../node_modules/@mui/icons-material/esm/Close.js","../../src/features/activityDetails/hooks.ts","../../src/features/activityDetails/ActivityName.tsx","../../src/features/activityDetails/TopOfIntervalList.tsx","../../src/features/activityDetails/SubheaderItem.tsx","../../src/features/activityDetails/IntervalItem.tsx","../../src/features/activityDetails/useRowData.ts","../../src/features/activityDetails/StickySubheader.tsx","../../src/features/activityDetails/InnerElementType.tsx","../../src/features/activityDetails/ActivityDetailsContent.tsx","../../src/features/activityDetails/useActivityNameEditing.ts","../../src/features/activityDetails/ActivitySettings.tsx","../../src/features/activityDetails/ActivityDetailsPage.tsx"],"sourcesContent":["import { db } from \"../db\";\nimport { Activity, Interval } from \"../entities\";\nimport { getAncestors, getDescendants } from \"./activities\";\n\nexport type ActivityDetailsData = {\n  id: number;\n  // include self and ancestors and descendants activities names\n  activities: Map<number, Activity>;\n  /**\n   * Intervals grouped by day when they started.\n   * Sorted from the latest to the earliest day.\n   * Includes self and descendants activities intervals.\n   */\n  intervalsByDay: IntervalsByDay;\n};\n\ntype IntervalsByDay = Array<{\n  dayStart: number;\n  intervals: Array<Interval>;\n}>;\n\nexport async function getActivityDetails(\n  activityId: number,\n): Promise<ActivityDetailsData> {\n  const { activity, ancestors, descendants, intervals } = await db.transaction(\n    \"r\",\n    db.activities,\n    db.intervals,\n    async () => {\n      const activity = await db.activities.get(activityId);\n      if (!activity) {\n        throw new Error(`Activity with ID ${activityId} does not exist.`);\n      }\n\n      const [ancestors, descendants] = await Promise.all([\n        getAncestors(activity),\n        getDescendants(activity),\n      ]);\n\n      const selfAndDescendantsIds = [\n        activity.id,\n        ...descendants.map((d) => d.id),\n      ];\n\n      const intervals = await db.intervals\n        .where(\"activityId\")\n        .anyOf(selfAndDescendantsIds)\n        .toArray();\n\n      return { activity, ancestors, descendants, intervals };\n    },\n  );\n\n  const activities = new Map<number, Activity>();\n  activities.set(activity.id, activity);\n  ancestors.concat(descendants).forEach((a) => {\n    activities.set(a.id, a);\n  });\n\n  const intervalsByDay: IntervalsByDay = [];\n  const intervalsByDayMap = new Map<number, Array<Interval>>();\n  intervals.forEach((interval) => {\n    const dayStart = new Date(interval.start).setHours(0, 0, 0, 0);\n    if (!intervalsByDayMap.has(dayStart)) {\n      intervalsByDayMap.set(dayStart, []);\n      intervalsByDay.push({\n        dayStart,\n        intervals: intervalsByDayMap.get(dayStart)!,\n      });\n    }\n    intervalsByDayMap.get(dayStart)?.push(interval);\n  });\n  intervalsByDay.sort((a, b) => b.dayStart - a.dayStart);\n  intervalsByDay.forEach((day) => {\n    day.intervals.sort((a, b) => b.start - a.start);\n  });\n\n  return { id: activityId, activities, intervalsByDay };\n}\n","import Button from \"@mui/material/Button\";\nimport Dialog from \"@mui/material/Dialog\";\nimport DialogActions from \"@mui/material/DialogActions\";\nimport DialogContent from \"@mui/material/DialogContent\";\nimport DialogTitle from \"@mui/material/DialogTitle\";\nimport { useNavigate } from \"../../router/hooks\";\nimport { useAppSnackbarStore } from \"../../components/AppSnackbarStore\";\nimport { useActivityStore } from \"./Store\";\nimport { deleteInterval } from \"../../db/queries/editInterval\";\n\nexport const DeleteIntervalConfirmation = () => {\n  const open = useActivityStore((state) =>\n    state.isDeleteIntervalConfirmationOpen(),\n  );\n  return (\n    <Dialog open={open}>\n      <Content />\n    </Dialog>\n  );\n};\n\nconst Content = () => {\n  const closeDeleteIntervalConfirmation = useActivityStore(\n    (state) => state.closeDeleteIntervalConfirmation,\n  );\n  const deleteIntervalConfirmationData = useActivityStore(\n    (state) => state.deleteIntervalConfirmationData,\n  );\n  const { intervalId } = deleteIntervalConfirmationData ?? {};\n  const openSuccessSnackbar = useAppSnackbarStore((state) => state.openSuccess);\n  const openErrorSnackbar = useAppSnackbarStore((state) => state.openError);\n  const navigate = useNavigate();\n\n  const yesDelete = () => {\n    closeDeleteIntervalConfirmation();\n    navigate(-1);\n    deleteInterval(intervalId!)\n      .then(() => {\n        openSuccessSnackbar(\"Interval successfully deleted\");\n      })\n      .catch(() => openErrorSnackbar(\"Failed to delete interval\"));\n  };\n\n  return (\n    <>\n      <DialogTitle>Are you sure you want to delete the interval?</DialogTitle>\n      <DialogContent>You cannot undo this action.</DialogContent>\n      <DialogActions>\n        <Button\n          autoFocus\n          aria-label={\"no\"}\n          onClick={closeDeleteIntervalConfirmation}\n        >\n          No\n        </Button>\n        <Button aria-label={\"yes\"} onClick={yesDelete}>\n          Yes\n        </Button>\n      </DialogActions>\n    </>\n  );\n};\n","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M3 17.25V21h3.75L17.81 9.94l-3.75-3.75zM20.71 7.04c.39-.39.39-1.02 0-1.41l-2.34-2.34a.996.996 0 0 0-1.41 0l-1.83 1.83 3.75 3.75z\"\n}), 'Edit');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41z\"\n}), 'Check');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","import { Activity } from \"../../db/entities\";\nimport { useMemo } from \"react\";\nimport { ACTIVITY_FULL_NAME_SEPARATOR } from \"../activities/constants\";\n\nexport const useActivityFullName = (\n  activityId: number,\n  activities: Map<number, Activity>,\n  fromActivityId: number = -1,\n) => {\n  return useMemo(() => {\n    const activity = activities.get(activityId);\n    if (!activity) {\n      return \"\";\n    }\n    const ancestors = [];\n    let currentActivity: Activity | undefined = activity;\n    while (currentActivity && currentActivity.id !== fromActivityId) {\n      ancestors.unshift(currentActivity.name);\n      currentActivity = activities.get(currentActivity.parentId);\n    }\n    return ancestors.join(ACTIVITY_FULL_NAME_SEPARATOR);\n  }, [activities, activityId, fromActivityId]);\n};\n","import Box from \"@mui/material/Box\";\nimport IconButton from \"@mui/material/IconButton\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\nimport { ChangeEvent, KeyboardEvent } from \"react\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport CheckIcon from \"@mui/icons-material/Check\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Activity } from \"../../db/entities\";\nimport { useActivityFullName } from \"./hooks\";\n\ntype ActivityNameProps = {\n  activityId: number;\n  activities: Map<number, Activity>;\n  editMode: boolean;\n  name: string;\n  validationError: string;\n  onEditStart: () => void;\n  onNameChange: (name: string) => void;\n  onSave: () => void;\n  onCancel: () => void;\n};\n\nexport const ActivityName = (props: ActivityNameProps) => {\n  const {\n    activityId,\n    activities,\n    editMode,\n    name,\n    validationError,\n    onEditStart,\n    onNameChange,\n    onSave,\n    onCancel,\n  } = props;\n  const fullName = useActivityFullName(activityId, activities);\n\n  const handleNameChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const newName = e.target.value;\n    onNameChange(newName);\n  };\n\n  const handleKeyDown = (e: KeyboardEvent) => {\n    if (e.key === \"Enter\") {\n      onSave();\n    } else if (e.key === \"Escape\") {\n      onCancel();\n    }\n  };\n\n  return (\n    <Box\n      sx={{ display: \"flex\", alignItems: \"flex-start\", pl: 2, pr: 2, mb: 1 }}\n    >\n      {editMode ? (\n        <Box sx={{ flexGrow: 1, mr: 1 }}>\n          <TextField\n            label={\"Name\"}\n            value={name}\n            onChange={handleNameChange}\n            onKeyDown={handleKeyDown}\n            variant=\"outlined\"\n            size=\"small\"\n            placeholder=\"Activity name\"\n            sx={{ width: \"100%\" }}\n            autoFocus\n            error={!!validationError}\n            helperText={validationError}\n          />\n        </Box>\n      ) : (\n        <Typography variant=\"h6\" sx={{ flexGrow: 1 }}>\n          {fullName}\n        </Typography>\n      )}\n      <Box\n        sx={{\n          display: \"flex\",\n          alignItems: \"flex-start\",\n          mt: editMode ? 0.5 : 0,\n        }}\n      >\n        {editMode ? (\n          <>\n            <IconButton aria-label=\"save activity\" onClick={onSave}>\n              <CheckIcon />\n            </IconButton>\n            <IconButton aria-label=\"cancel edit\" onClick={onCancel}>\n              <CloseIcon />\n            </IconButton>\n          </>\n        ) : (\n          <IconButton aria-label=\"edit activity\" onClick={onEditStart}>\n            <EditIcon />\n          </IconButton>\n        )}\n      </Box>\n    </Box>\n  );\n};\n","import Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport IconButton from \"@mui/material/IconButton\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\nimport { FullScreenModalHeader } from \"../../components/FullScreenModalHeader\";\nimport { ActivityName } from \"./ActivityName\";\nimport { ActivityDetailsData } from \"../../db/queries/activityDetails\";\nimport { useNavigate } from \"../../router/hooks\";\n\ntype TopOfIntervalListProps = {\n  activityDetails: ActivityDetailsData;\n  editingState: {\n    editMode: boolean;\n    name: string;\n    siblingNames: Set<string>;\n    validationError: string;\n  };\n  onEditStart: () => void;\n  onNameChange: (newName: string) => void;\n  onSave: () => void;\n  onCancel: () => void;\n};\n\nexport const TopOfIntervalList = (props: TopOfIntervalListProps) => {\n  const {\n    activityDetails,\n    editingState,\n    onEditStart,\n    onNameChange,\n    onSave,\n    onCancel,\n  } = props;\n  const { id, activities } = activityDetails;\n  const navigate = useNavigate();\n\n  const handleSettingsClick = () => {\n    navigate(`settings`);\n  };\n\n  return (\n    <Box sx={{ pt: 1, pb: 1 }}>\n      <Box\n        sx={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <FullScreenModalHeader headline=\"Activity Details\" />\n        <IconButton\n          aria-label=\"Activity settings\"\n          onClick={handleSettingsClick}\n          sx={{ mr: 2 }}\n        >\n          <SettingsIcon />\n        </IconButton>\n      </Box>\n      <ActivityName\n        activityId={id}\n        activities={activities}\n        editMode={editingState.editMode}\n        name={editingState.name}\n        validationError={editingState.validationError}\n        onEditStart={onEditStart}\n        onNameChange={onNameChange}\n        onSave={onSave}\n        onCancel={onCancel}\n      />\n      <Typography variant=\"h6\" sx={{ pl: 2, pr: 2 }}>\n        Intervals\n      </Typography>\n    </Box>\n  );\n};\n","import ListSubheader from \"@mui/material/ListSubheader\";\nimport dayjs from \"../../utils/dayjs\";\nimport { calendarTime } from \"../../utils/date\";\n\ntype SubheaderItemProps = {\n  dayStart: number;\n  stickyItemVisible?: boolean;\n};\n\nexport const SubheaderItem = (props: SubheaderItemProps) => {\n  const { dayStart, stickyItemVisible } = props;\n  return (\n    <ListSubheader style={{ opacity: stickyItemVisible ? 0 : 1 }}>\n      {calendarTime(dayjs(dayStart))}\n    </ListSubheader>\n  );\n};\n","import IconButton from \"@mui/material/IconButton\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport { Link } from \"react-router\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport dayjs from \"../../utils/dayjs\";\nimport { Activity, Interval } from \"../../db/entities\";\nimport { useActivityFullName } from \"./hooks\";\nimport { useIntervalDuration } from \"../intervals/hooks\";\nimport { MAX_DATE_MS } from \"../../utils/date\";\n\ntype IntervalItemProps = {\n  activityId: number;\n  interval: Interval;\n  activities: Map<number, Activity>;\n};\n\nconst INTERVAL_FORMAT = \"HH:mm:ss\";\n\nconst formatIntervalEnd = (interval: Interval) => {\n  const { start, end } = interval;\n  if (end === MAX_DATE_MS) {\n    return \"now\";\n  } else if (dayjs(start).isSame(dayjs(end), \"day\")) {\n    return dayjs(end).format(INTERVAL_FORMAT);\n  } else {\n    return dayjs(end).format(\"ddd, MMM D, YYYY HH:mm\");\n  }\n};\n\nexport const IntervalItem = (props: IntervalItemProps) => {\n  const { activityId, interval, activities } = props;\n  const { start, activityId: subActivityId } = interval;\n  const duration = useIntervalDuration(interval.start, interval.end, false);\n\n  const subActivityPath = useActivityFullName(\n    subActivityId,\n    activities,\n    activityId,\n  );\n  const subActivitySuffix =\n    activityId !== subActivityId ? ` (${subActivityPath})` : \"\";\n\n  const startValue = dayjs(start).format(INTERVAL_FORMAT);\n  const endValue = formatIntervalEnd(interval);\n\n  return (\n    <ListItem dense={true}>\n      <ListItemText\n        primary={\n          <>\n            {startValue} — {endValue}\n            {subActivitySuffix}\n          </>\n        }\n        secondary={<>{duration}</>}\n      />\n      <ListItemIcon sx={{ minWidth: \"initial\" }}>\n        <IconButton\n          aria-label={\"edit interval\"}\n          component={Link}\n          to={`interval/${interval.id}`}\n        >\n          <EditIcon />\n        </IconButton>\n      </ListItemIcon>\n    </ListItem>\n  );\n};\n","import { useMemo, ElementType } from \"react\";\nimport { SingleItemData } from \"../../components/ResizableList\";\nimport { ActivityDetailsData } from \"../../db/queries/activityDetails\";\nimport { TopOfIntervalList } from \"./TopOfIntervalList\";\nimport { SubheaderItem } from \"./SubheaderItem\";\nimport { IntervalItem } from \"./IntervalItem\";\n\nexport const useRowData = (\n  activityDetails: ActivityDetailsData,\n  visibleStartIndex: number,\n  editingState: {\n    editMode: boolean;\n    name: string;\n    siblingNames: Set<string>;\n    validationError: string;\n  },\n  onEditStart: () => void,\n  onNameChange: (newName: string) => void,\n  onSave: () => void,\n  onCancel: () => void,\n) => {\n  return useMemo(() => {\n    const { intervalsByDay, activities } = activityDetails;\n    let index = 1;\n    return [\n      {\n        RowComponent: TopOfIntervalList,\n        rowProps: {\n          activityDetails,\n          editingState,\n          onEditStart,\n          onNameChange,\n          onSave,\n          onCancel,\n        },\n        rowData: { size: 104 },\n      },\n      ...intervalsByDay.flatMap((dayIntervals) => {\n        const { dayStart, intervals } = dayIntervals;\n        const finalIndex = index;\n        const subheaderData: SingleItemData<typeof SubheaderItem> = {\n          RowComponent: SubheaderItem,\n          rowProps: {\n            dayStart,\n            stickyItemVisible: visibleStartIndex === finalIndex,\n          },\n          rowData: { size: 48 },\n        };\n        const intervalsRowData: SingleItemData<typeof IntervalItem>[] =\n          intervals.map((interval) => ({\n            RowComponent: IntervalItem,\n            rowProps: {\n              interval,\n              activities,\n              activityId: activityDetails.id,\n            },\n            rowData: { size: 60.03125 },\n          }));\n        const items = [subheaderData, ...intervalsRowData];\n        index += items.length;\n        return items;\n      }),\n    ] as SingleItemData<ElementType>[];\n  }, [\n    activityDetails,\n    visibleStartIndex,\n    editingState,\n    onEditStart,\n    onNameChange,\n    onSave,\n    onCancel,\n  ]);\n};\n","import { SubheaderItem } from \"./SubheaderItem\";\nimport { Interval } from \"../../db/entities\";\n\ntype StickySubheaderProps = {\n  interval: Interval | undefined;\n};\n\nexport const StickySubheader = (props: StickySubheaderProps) => {\n  const { interval } = props;\n  return <>{interval && <SubheaderItem dayStart={interval.start} />}</>;\n};\n","import { ReactNode, Ref, useImperativeHandle, useRef } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport { Interval } from \"../../db/entities\";\nimport { StickySubheader } from \"./StickySubheader\";\n\nexport type InnerElementTypeRef = {\n  setTopInterval: (topInterval: Interval | undefined) => void;\n};\n\ntype InnerElementTypeProps = {\n  children: ReactNode;\n  style: { [key: string]: unknown };\n  ref: Ref<InnerElementTypeRef>;\n};\n\nexport const InnerElementType = (props: InnerElementTypeProps) => {\n  const { children, ref, ...rest } = props;\n  const topIntervalRef = useRef<Interval | undefined>(undefined);\n\n  useImperativeHandle(ref, () => ({\n    setTopInterval: (topInterval) => {\n      topIntervalRef.current = topInterval;\n    },\n  }));\n\n  return (\n    <Box {...rest} sx={{ mb: 1 }}>\n      <StickySubheader interval={topIntervalRef.current} />\n      {children}\n    </Box>\n  );\n};\n","import { useState, useMemo } from \"react\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport { ResizableList, SingleItemData } from \"../../components/ResizableList\";\nimport { ActivityDetailsData } from \"../../db/queries/activityDetails\";\nimport { useRowData } from \"./useRowData\";\nimport { InnerElementType, InnerElementTypeRef } from \"./InnerElementType\";\nimport { IntervalItem } from \"./IntervalItem\";\n\ntype ActivityDetailsContentProps = {\n  activityDetails: ActivityDetailsData;\n  editingState: {\n    editMode: boolean;\n    name: string;\n    siblingNames: Set<string>;\n    validationError: string;\n  };\n  onEditStart: () => void;\n  onNameChange: (newName: string) => void;\n  onSave: () => void;\n  onCancel: () => void;\n};\n\nexport const ActivityDetailsContent = (props: ActivityDetailsContentProps) => {\n  const {\n    activityDetails,\n    editingState,\n    onEditStart,\n    onNameChange,\n    onSave,\n    onCancel,\n  } = props;\n  const [visibleStartIndex, setVisibleStartIndex] = useState(0);\n  const rowData = useRowData(\n    activityDetails,\n    visibleStartIndex,\n    editingState,\n    onEditStart,\n    onNameChange,\n    onSave,\n    onCancel,\n  );\n\n  const topInterval = useMemo(() => {\n    if (visibleStartIndex > 0) {\n      return rowData\n        .slice(visibleStartIndex)\n        .find(\n          (\n            singleRowData,\n          ): singleRowData is SingleItemData<typeof IntervalItem> =>\n            singleRowData.RowComponent === IntervalItem,\n        )?.rowProps.interval;\n    } else {\n      return undefined;\n    }\n  }, [rowData, visibleStartIndex]);\n\n  return (\n    <AutoSizer>\n      {({ width, height }) => (\n        <ResizableList\n          height={height}\n          width={width}\n          itemData={rowData}\n          innerElementType={InnerElementType}\n          innerRef={(ref: InnerElementTypeRef | null) =>\n            ref?.setTopInterval(topInterval)\n          }\n          onItemsRendered={({ visibleStartIndex }) => {\n            setVisibleStartIndex(visibleStartIndex);\n          }}\n        />\n      )}\n    </AutoSizer>\n  );\n};\n","import { useState } from \"react\";\nimport {\n  editActivityName,\n  getSiblingActivities,\n} from \"../../db/queries/activities\";\nimport { openErrorSnackbar } from \"../../components/AppSnackbarStore\";\nimport { ActivityDetailsData } from \"../../db/queries/activityDetails\";\n\ntype EditingState = {\n  editMode: boolean;\n  name: string;\n  siblingNames: Set<string>;\n  validationError: string;\n};\n\nexport const useActivityNameEditing = (activityId: number) => {\n  const [editingState, setEditingState] = useState<EditingState>({\n    editMode: false,\n    name: \"\",\n    siblingNames: new Set(),\n    validationError: \"\",\n  });\n\n  const validateName = (nameToValidate: string, siblingNames: Set<string>) => {\n    if (nameToValidate.trim() === \"\") {\n      return \"Activity name cannot be empty\";\n    }\n    if (siblingNames.has(nameToValidate.trim().toLowerCase())) {\n      return \"An activity with this name already exists in the same parent\";\n    }\n    return \"\";\n  };\n\n  const handleEditStart = async (activityDetailsData: ActivityDetailsData) => {\n    if (!activityDetailsData) return;\n\n    try {\n      const siblings = await getSiblingActivities(activityId);\n      const names = new Set(\n        siblings.map((sibling) => sibling.name.toLowerCase()),\n      );\n      const currentActivity = activityDetailsData.activities.get(activityId);\n\n      setEditingState({\n        editMode: true,\n        name: currentActivity?.name || \"\",\n        siblingNames: names,\n        validationError: \"\",\n      });\n    } catch (err) {\n      console.error(err);\n      openErrorSnackbar(\"Failed to load activity data\");\n    }\n  };\n\n  const handleNameChange = (newName: string) => {\n    const validationError = validateName(newName, editingState.siblingNames);\n    setEditingState((prev) => ({\n      ...prev,\n      name: newName,\n      validationError,\n    }));\n  };\n\n  const handleSave = () => {\n    const trimmedName = editingState.name.trim();\n    const validationError = validateName(\n      trimmedName,\n      editingState.siblingNames,\n    );\n\n    if (validationError) {\n      setEditingState((prev) => ({ ...prev, validationError }));\n      return;\n    }\n\n    editActivityName(activityId, trimmedName)\n      .then(() => {\n        setEditingState({\n          editMode: false,\n          name: \"\",\n          siblingNames: new Set(),\n          validationError: \"\",\n        });\n      })\n      .catch((err) => {\n        console.error(err);\n        openErrorSnackbar(\"Failed to save activity name\");\n      });\n  };\n\n  const handleCancel = () => {\n    setEditingState({\n      editMode: false,\n      name: \"\",\n      siblingNames: new Set(),\n      validationError: \"\",\n    });\n  };\n\n  return {\n    editingState,\n    handleEditStart,\n    handleNameChange,\n    handleSave,\n    handleCancel,\n  };\n};\n","import { useState } from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Switch from \"@mui/material/Switch\";\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\nimport Typography from \"@mui/material/Typography\";\nimport { useParams } from \"react-router\";\nimport { useLiveQuery } from \"dexie-react-hooks\";\nimport { FullScreenModalHeader } from \"../../components/FullScreenModalHeader\";\nimport {\n  openErrorSnackbar,\n  openSuccessSnackbar,\n} from \"../../components/AppSnackbarStore\";\nimport { db } from \"../../db/db\";\nimport { FullScreenModal } from \"../../components/FullScreenModal\";\nimport { useLocation } from \"../../router/hooks\";\n\nexport const ActivitySettingsModal = () => {\n  const { pathname } = useLocation();\n  return (\n    <FullScreenModal open={pathname.endsWith(\"/settings\")}>\n      <Content />\n    </FullScreenModal>\n  );\n};\n\nconst Content = () => {\n  const params = useParams<{ activityID: string }>();\n  const activityId = parseInt(params.activityID ?? \"\");\n  const [saving, setSaving] = useState(false);\n\n  const activity = useLiveQuery(\n    () => db.activities.get(activityId),\n    [activityId],\n  );\n\n  const handleNotificationToggle = async (enabled: boolean) => {\n    if (!activity) return;\n\n    setSaving(true);\n    try {\n      await db.activities.update(activityId, {\n        notificationsEnabled: enabled ? 1 : 0,\n      });\n      openSuccessSnackbar(\"Notification settings updated\");\n    } catch (error) {\n      console.error(\"Failed to update notification settings:\", error);\n      openErrorSnackbar(\"Failed to update notification settings\");\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  if (!activity) {\n    return (\n      <>\n        <FullScreenModalHeader headline=\"Activity Settings\" />\n        <Box sx={{ p: 2 }}>\n          <Typography>Activity not found</Typography>\n        </Box>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <FullScreenModalHeader headline=\"Activity Settings\" />\n\n      <Box sx={{ p: 2 }}>\n        <Typography variant=\"h6\" sx={{ mb: 3 }}>\n          {activity.name}\n        </Typography>\n\n        <Box sx={{ mb: 3 }}>\n          <Typography variant=\"subtitle1\" sx={{ mb: 2 }}>\n            Notifications\n          </Typography>\n\n          <FormControlLabel\n            control={\n              <Switch\n                checked={!!activity.notificationsEnabled}\n                onChange={(e) => handleNotificationToggle(e.target.checked)}\n                disabled={saving}\n                aria-label={\n                  \"Show notifications when this activity is in progress\"\n                }\n              />\n            }\n            label=\"Show notifications when this activity is in progress\"\n          />\n\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mt: 1 }}>\n            When enabled, you&apos;ll receive notifications while this activity\n            is active.\n          </Typography>\n        </Box>\n      </Box>\n    </>\n  );\n};\n","import Box from \"@mui/material/Box\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Paper from \"@mui/material/Paper\";\nimport { Outlet, useParams } from \"react-router\";\nimport { useLiveQuery } from \"dexie-react-hooks\";\nimport { getActivityDetails } from \"../../db/queries/activityDetails\";\nimport { openErrorSnackbar } from \"../../components/AppSnackbarStore\";\nimport { DeleteIntervalConfirmation } from \"./DeleteIntervalConfirmation\";\nimport { ActivityDetailsContent } from \"./ActivityDetailsContent\";\nimport { useActivityNameEditing } from \"./useActivityNameEditing\";\nimport { ActivitySettingsModal } from \"./ActivitySettings\";\n\nexport const ActivityDetailsPage = () => {\n  const params = useParams<{ activityID: string }>();\n  const activityId = parseInt(params.activityID ?? \"\");\n\n  const {\n    editingState,\n    handleEditStart,\n    handleNameChange,\n    handleSave,\n    handleCancel,\n  } = useActivityNameEditing(activityId);\n\n  const activityDetailsData = useLiveQuery(\n    () =>\n      getActivityDetails(activityId).catch((e) => {\n        console.error(e);\n        openErrorSnackbar(\"Activity not found\");\n        return undefined;\n      }),\n    [activityId],\n  );\n\n  return (\n    <>\n      <Paper square sx={{ height: \"100%\" }}>\n        {activityDetailsData ? (\n          <ActivityDetailsContent\n            activityDetails={activityDetailsData}\n            editingState={editingState}\n            onEditStart={() => handleEditStart(activityDetailsData)}\n            onNameChange={handleNameChange}\n            onSave={handleSave}\n            onCancel={handleCancel}\n          />\n        ) : (\n          <Loading />\n        )}\n      </Paper>\n      <Outlet />\n      <DeleteIntervalConfirmation />\n      <ActivitySettingsModal />\n    </>\n  );\n};\n\nfunction Loading() {\n  return (\n    <Box\n      sx={{\n        display: \"flex\",\n        height: \"100%\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n      }}\n    >\n      <CircularProgress />\n    </Box>\n  );\n}\n"],"names":["getActivityDetails","activityId","activity","ancestors","descendants","intervals","db","getAncestors","getDescendants","selfAndDescendantsIds","d","activities","a","intervalsByDay","intervalsByDayMap","interval","dayStart","b","day","DeleteIntervalConfirmation","open","useActivityStore","state","jsx","Dialog","Content","closeDeleteIntervalConfirmation","deleteIntervalConfirmationData","intervalId","openSuccessSnackbar","useAppSnackbarStore","openErrorSnackbar","navigate","useNavigate","yesDelete","deleteInterval","jsxs","Fragment","DialogTitle","DialogContent","DialogActions","Button","EditIcon","createSvgIcon","_jsx","CheckIcon","CloseIcon","useActivityFullName","fromActivityId","useMemo","currentActivity","ACTIVITY_FULL_NAME_SEPARATOR","ActivityName","props","editMode","name","validationError","onEditStart","onNameChange","onSave","onCancel","fullName","handleNameChange","e","newName","handleKeyDown","Box","TextField","Typography","IconButton","TopOfIntervalList","activityDetails","editingState","id","handleSettingsClick","FullScreenModalHeader","SettingsIcon","SubheaderItem","stickyItemVisible","ListSubheader","calendarTime","dayjs","INTERVAL_FORMAT","formatIntervalEnd","start","end","MAX_DATE_MS","IntervalItem","subActivityId","duration","useIntervalDuration","subActivityPath","subActivitySuffix","startValue","endValue","ListItem","ListItemText","ListItemIcon","Link","useRowData","visibleStartIndex","index","dayIntervals","subheaderData","intervalsRowData","items","StickySubheader","InnerElementType","children","ref","rest","topIntervalRef","useRef","useImperativeHandle","topInterval","ActivityDetailsContent","setVisibleStartIndex","useState","rowData","singleRowData","AutoSizer","width","height","ResizableList","useActivityNameEditing","setEditingState","validateName","nameToValidate","siblingNames","activityDetailsData","siblings","getSiblingActivities","names","sibling","err","prev","trimmedName","editActivityName","ActivitySettingsModal","pathname","useLocation","FullScreenModal","params","useParams","saving","setSaving","useLiveQuery","handleNotificationToggle","enabled","error","FormControlLabel","Switch","ActivityDetailsPage","handleEditStart","handleSave","handleCancel","Paper","Loading","Outlet","CircularProgress"],"mappings":"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","x_google_ignoreList":[2,3,4]}